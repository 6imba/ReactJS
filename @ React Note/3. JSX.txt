- write js in jsx ==> <button onClick={js}></button>



- jsx ==> JavScript Syntax Extension:
    - jsx is used to insert dynamic_js_with_html  on react_component.
    - <div className="App-header"></div>
    - {js_variable} ==> {2+4}: emit
    - function App() {
        return (
            jsx
        );
      }
    - jsx ~ html+js,pug,hbs,ejs

    - jsx in component must be wrapped inside something. ==> <></>
    - every tag must be closed


# Consider this variable declaration:
  > const element = <h1>Hello, world!</h1>;
  
  > 1. 
  return (
    <>
    <h1 className="pt-3">Add New Task:</h1>
    <input type="text" className="form-control" id="input-task" placeholder="Your task"/>
    <button type="submit" className="btn btn-primary mt-3" onClick={addNewTask}>Add</button>
    <hr/>
    </>
  )

  > 2. 
  const element = <>
                    <h1 className="pt-3">Add New Task:</h1>
                    <input type="text" className="form-control" id="input-task" placeholder="Your task"/>
                    <button type="submit" className="btn btn-primary mt-3" onClick={addNewTask}>Add</button>
                    <hr/>
                  </>
  return element;

  # JSX ==> 1. produce_element, 2. render_element_to_DOM.

# React elements are immutable. Updating the Rendered Element. React Only Updates Whatâ€™s Necessary.

# Later:
  - JSX Prevents Injection Attacks
  - JSX Represents Objects
  - https://www.youtube.com/watch?v=x7cQ3mrcKaY
  - https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript
  - https://gist.github.com/gaearon/683e676101005de0add59e8bb345340c

# 